{"version":3,"sources":["webparts/search/components/TilesList/Tile.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAE/B,wEAQiD;AACjD,0DAA4D;AAC5D,+BAAiC;AACjC,iCAA+B;AAE/B,IAAM,mBAAmB,GAAW,GAAG,CAAC;AACxC,IAAM,oBAAoB,GAAW,GAAG,CAAC;AAEzC;IAAkC,wBAAiC;IAAnE;;IA8BA,CAAC;IA5BU,qBAAM,GAAb;QAEI,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAE7B,IAAI,YAAY,GAA8B;YAC1C,aAAa,EAAE;gBACX;oBACI,GAAG,EAAE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI;oBACpE,eAAe,EAAE,IAAI,CAAC,0BAA0B;oBAChD,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,QAAQ,EAAE,gBAAQ,CAAC,KAAK;oBACxB,MAAM,EAAE,oBAAoB;iBAC/B;aACJ;SACJ,CAAC;QAEF,MAAM,CAAC,CACH,oBAAC,2BAAY,IAAC,WAAW,EAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,EAAG,SAAS,EAAC,sBAAsB;YAC1H,6BAAK,SAAS,EAAC,+BAA+B,EAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,oBAAoB,EAAE;gBACpF,oBAAC,kCAAmB,eAAM,YAAY,EAAK,CACzC;YACN,oBAAC,gCAAiB,IAAC,KAAK,EAAG,IAAI,CAAC,KAAK,EAAG,cAAc,EAAG,KAAK,GAAK;YACnE,6BAAK,SAAS,EAAC,wBAAwB;gBACnC,kCAAQ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAE,IAAI,CAAS,CACtF,CACK,CAClB,CAAC;IACN,CAAC;IACL,WAAC;AAAD,CA9BA,AA8BC,CA9BiC,KAAK,CAAC,SAAS,GA8BhD","file":"webparts/search/components/TilesList/Tile.js","sourcesContent":["import * as React from \"react\";\r\nimport ITileProps from \"./ITileProps\";\r\nimport {\r\n  DocumentCard,\r\n  DocumentCardActions,\r\n  DocumentCardActivity,\r\n  DocumentCardLocation,\r\n  DocumentCardPreview,\r\n  DocumentCardTitle,\r\n  IDocumentCardPreviewProps\r\n} from 'office-ui-fabric-react/lib/DocumentCard';\r\nimport { ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport * as moment from \"moment\";\r\nimport \"../SearchWebPart.scss\";\r\n\r\nconst PREVIEW_IMAGE_WIDTH: number = 204;\r\nconst PREVIEW_IMAGE_HEIGHT: number = 111;\r\n\r\nexport default class Tile extends React.Component<ITileProps, null> {\r\n\r\n    public render() {\r\n\r\n        const item = this.props.item;\r\n                    \r\n        let previewProps: IDocumentCardPreviewProps = {\r\n            previewImages: [\r\n                {\r\n                    url: item.ServerRedirectedURL ? item.ServerRedirectedURL : item.Path,\r\n                    previewImageSrc: item.ServerRedirectedPreviewURL,\r\n                    iconSrc: item.iconSrc,\r\n                    imageFit: ImageFit.cover,\r\n                    height: PREVIEW_IMAGE_HEIGHT,\r\n                }\r\n            ],\r\n        };  \r\n                        \r\n        return (\r\n            <DocumentCard onClickHref={ item.ServerRedirectedURL ? item.ServerRedirectedURL : item.Path } className=\"searchWp__resultCard\">\r\n                <div className=\"searchWp__tile__iconContainer\" style={{ \"height\": PREVIEW_IMAGE_HEIGHT }}>\r\n                    <DocumentCardPreview { ...previewProps } />\r\n                </div>\r\n                <DocumentCardTitle title={ item.Title } shouldTruncate={ false } />\r\n                <div className=\"searchWp__tile__footer\">\r\n                    <span>{ moment(item.Created).isValid() ? moment(item.Created).format(\"L\"): null }</span>                                       \r\n                </div>          \r\n            </DocumentCard>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}