{"version":3,"sources":["webparts/searchResults/SearchResultsWebPart.ts"],"names":[],"mappings":"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","file":"webparts/searchResults/SearchResultsWebPart.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n    BaseClientSideWebPart,\r\n    PropertyPaneSlider,\r\n    IPropertyPaneConfiguration,\r\n    PropertyPaneTextField,\r\n    PropertyPaneToggle\r\n} from '@microsoft/sp-webpart-base';\r\nimport { Environment, EnvironmentType } from '@microsoft/sp-core-library';\r\nimport * as strings from 'SearchWebPartStrings';\r\nimport SearchContainer from \"./components/SearchResultsContainer/SearchResultsContainer\";\r\nimport ISearchContainerProps from \"./components/SearchResultsContainer/ISearchResultsContainerProps\";\r\nimport { ISearchResultsWebPartProps } from './ISearchResultsWebPartProps';\r\nimport ISearchDataProvider from \"../dataProviders/ISearchDataProvider\";\r\nimport MockSearchDataProvider from \"../dataProviders/MockSearchDataProvider\";\r\nimport SearchDataProvider from \"../dataProviders/SearchDataProvider\";\r\nimport * as moment from \"moment\";\r\nimport { Placeholder, IPlaceholderProps } from \"@pnp/spfx-controls-react/lib/Placeholder\";\r\nimport { PropertyPaneCheckbox } from '@microsoft/sp-webpart-base/lib/propertyPane/propertyPaneFields/propertyPaneCheckBox/PropertyPaneCheckbox';\r\nimport { PropertyPaneHorizontalRule } from '@microsoft/sp-webpart-base/lib/propertyPane/propertyPaneFields/propertyPaneHorizontalRule/PropertyPaneHorizontalRule';\r\n\r\nexport default class SearchWebPart extends BaseClientSideWebPart<ISearchResultsWebPartProps> {\r\n\r\n    private _dataProvider: ISearchDataProvider;\r\n    private _useResultSource: boolean;\r\n\r\n    /**\r\n     * Override the base onInit() implementation to get the persisted properties to initialize data provider.\r\n     */\r\n    protected onInit(): Promise<void> {\r\n\r\n        // Init the moment JS library locale globally\r\n        const currentLocale = this.context.pageContext.cultureInfo.currentCultureName;\r\n        moment.locale(currentLocale);\r\n\r\n        if (Environment.type === EnvironmentType.Local) {\r\n            this._dataProvider = new MockSearchDataProvider();\r\n        } else {\r\n            this._dataProvider = new SearchDataProvider(this.context);\r\n        }\r\n\r\n        // Register an handler to catch search box queries\r\n        this.bindPushStateEvent();\r\n\r\n        this._useResultSource = false;\r\n\r\n        return super.onInit();\r\n    }\r\n\r\n    protected get disableReactivePropertyChanges(): boolean {\r\n        // Set this to true if you don't want the reactive behavior.\r\n        return false;\r\n    }\r\n\r\n    public render(): void {\r\n\r\n        let renderElement = null;\r\n\r\n        // Configure the provider before the query according to our needs\r\n        this._dataProvider.resultsCount = this.properties.maxResultsCount;\r\n        this._dataProvider.queryTemplate = this.properties.queryTemplate;\r\n        this._dataProvider.resultSourceId = this.properties.resultSourceId;\r\n        this._dataProvider.enableQueryRules = this.properties.enableQueryRules;\r\n\r\n        const searchContainer: React.ReactElement<ISearchContainerProps> = React.createElement(\r\n            SearchContainer,\r\n            {\r\n                searchDataProvider: this._dataProvider,\r\n                queryKeywords: this.properties.queryKeywords,\r\n                maxResultsCount: this.properties.maxResultsCount,\r\n                resultSourceId: this.properties.resultSourceId,\r\n                enableQueryRules: this.properties.enableQueryRules,\r\n                selectedProperties: this.properties.selectedProperties ? this.properties.selectedProperties.replace(/\\s|,+$/g, '').split(\",\") : [],\r\n                refiners: this.properties.refiners,\r\n                showPaging: this.properties.showPaging,\r\n                showFileIcon: this.properties.showFileIcon,\r\n                showCreatedDate: this.properties.showCreatedDate\r\n            } as ISearchContainerProps\r\n        );\r\n\r\n        const placeholder: React.ReactElement<IPlaceholderProps> = React.createElement(\r\n            Placeholder,\r\n            {\r\n                iconName: strings.PlaceHolderEditLabel,\r\n                iconText: strings.PlaceHolderIconText,\r\n                description: strings.PlaceHolderDescription,\r\n                buttonLabel: strings.PlaceHolderConfigureBtnLabel,\r\n                onConfigure: this._setupWebPart.bind(this)\r\n            }\r\n        );\r\n\r\n        renderElement = (this.properties.queryKeywords && !this.properties.useSearchBoxQuery) || this.properties.useSearchBoxQuery ? searchContainer : placeholder;\r\n\r\n        ReactDom.render(renderElement, this.domElement);\r\n    }\r\n\r\n    protected get dataVersion(): Version {\r\n        return Version.parse('1.0');\r\n    }\r\n\r\n    protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n        return {\r\n            pages: [\r\n                {\r\n                    groups: [\r\n                        {\r\n                            groupName: strings.SearchSettingsGroupName,\r\n                            groupFields: [\r\n                                PropertyPaneCheckbox(\"useSearchBoxQuery\", {\r\n                                    checked: false,\r\n                                    text: strings.UseSearchBoxQueryLabel,                               \r\n                                }),\r\n                                PropertyPaneTextField('queryKeywords', {\r\n                                    label: strings.SearchQueryKeywordsFieldLabel,\r\n                                    description: strings.SearchQueryKeywordsFieldDescription,\r\n                                    value: this.properties.queryKeywords,\r\n                                    multiline: true,\r\n                                    resizable: true,\r\n                                    placeholder: strings.SearchQueryPlaceHolderText,\r\n                                    onGetErrorMessage: this._validateEmptyField.bind(this),\r\n                                    deferredValidationTime: 500,\r\n                                    disabled: this.properties.useSearchBoxQuery\r\n                                }),\r\n                                PropertyPaneTextField('queryTemplate', {\r\n                                    label: strings.QueryTemplateFieldLabel,\r\n                                    value: this.properties.queryTemplate,\r\n                                    multiline: true,\r\n                                    resizable: true,\r\n                                    placeholder: strings.SearchQueryPlaceHolderText,\r\n                                    deferredValidationTime: 300,\r\n                                    disabled: this._useResultSource,\r\n                                }),\r\n                                PropertyPaneTextField('resultSourceId', {\r\n                                    label: strings.ResultSourceIdLabel,\r\n                                    multiline: false,\r\n                                    onGetErrorMessage: this.validateSourceId.bind(this),\r\n                                    deferredValidationTime: 300\r\n                                }),\r\n                                PropertyPaneToggle('enableQueryRules', {\r\n                                    label: strings.EnableQueryRulesLabel,\r\n                                    checked: this.properties.enableQueryRules,\r\n                                }),\r\n                                PropertyPaneTextField('selectedProperties', {\r\n                                    label: strings.SelectedPropertiesFieldLabel,\r\n                                    description: strings.SelectedPropertiesFieldDescription,\r\n                                    multiline: true,\r\n                                    resizable: true,\r\n                                    value: this.properties.selectedProperties,\r\n                                    deferredValidationTime: 300\r\n                                }),\r\n                                PropertyPaneTextField('refiners', {\r\n                                    label: strings.RefinersFieldLabel,\r\n                                    description: strings.RefinersFieldDescription,\r\n                                    multiline: true,\r\n                                    resizable: true,\r\n                                    value: this.properties.refiners,\r\n                                    deferredValidationTime: 300\r\n                                }),\r\n                                PropertyPaneSlider(\"maxResultsCount\", {\r\n                                    label: strings.MaxResultsCount,\r\n                                    max: 50,\r\n                                    min: 1,\r\n                                    showValue: true,\r\n                                    step: 1,\r\n                                    value: 50,\r\n                                })\r\n                            ]\r\n                        },\r\n                        {\r\n                            groupName: strings.StylingSettingsGroupName,\r\n                            groupFields: [\r\n                                PropertyPaneToggle(\"showPaging\", {\r\n                                    label: strings.ShowPagingLabel,\r\n                                    checked: this.properties.showPaging,\r\n                                }),\r\n                                PropertyPaneToggle(\"showFileIcon\", {\r\n                                    label: strings.ShowFileIconLabel,\r\n                                    checked: this.properties.showFileIcon,\r\n                                }),\r\n                                PropertyPaneToggle(\"showCreatedDate\", {\r\n                                    label: strings.ShowCreatedDateLabel,\r\n                                    checked: this.properties.showCreatedDate,\r\n                                })\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Opens the Web Part property pane\r\n     */\r\n    private _setupWebPart() {\r\n        this.context.propertyPane.open();\r\n    }\r\n\r\n    private _validateEmptyField(value: string): string {\r\n\r\n        if (!value) {\r\n            return strings.EmptyFieldErrorMessage;\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    private bindPushStateEvent() {\r\n\r\n        // Original source: https://www.eliostruyf.com/check-page-mode-from-within-spfx-extensions\r\n\r\n        const _pushState = () => {\r\n            const _defaultPushState = history.pushState;\r\n            const _self = this;\r\n            return function (data: any, title: string, url?: string | null) {\r\n\r\n                const currentUrl = new URLSearchParams(url);\r\n                // We need to call the in context of the component\r\n                // The \"k\" parameter is set by the search box component\r\n                if (_self.properties.useSearchBoxQuery) {\r\n                    _self.properties.queryKeywords = data.k;\r\n                    _self.render();\r\n                }\r\n                // Call the original function with the provided arguments\r\n                // This context is necessary for the context of the history change\r\n                return _defaultPushState.apply(this, [data, title, url]);\r\n            };\r\n        };\r\n\r\n        history.pushState = _pushState();\r\n    }\r\n\r\n    private validateSourceId(value: string): string {\r\n        if(value.length > 0) {\r\n            if (!/^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/.test(value)) {\r\n                this._useResultSource = false;\r\n                return strings.InvalidResultSourceIdMessage;\r\n            } else {\r\n                this._useResultSource = true;\r\n            }\r\n        } else {\r\n            this._useResultSource = false;\r\n        }\r\n        \r\n        return '';\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}