{"version":3,"sources":["webparts/searchResults/components/TilesList/TilesList.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAE/B,wDAAuD;AACvD,+BAA0B;AAE1B,wCAAsC;AAEtC,IAAM,aAAa,GAAG,CAAC,CAAC;AACxB,IAAM,cAAc,GAAG,GAAG,CAAC;AAE3B;IAAuC,6BAA0C;IAO7E;QAAA,YACI,iBAAO,SAKV;QAHG,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjE,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IACzD,CAAC;IAEM,0BAAM,GAAb;QAAA,iBAoBC;QAlBG,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAE/B,MAAM,CAAC,CACH,oBAAC,WAAI,IACD,KAAK,EAAE,KAAK,EACZ,mBAAmB,EAAE,IAAI,CAAC,oBAAoB,EAC9C,aAAa,EAAE,IAAI,CAAC,cAAc,EAClC,oBAAoB,EAAE,CAAC,EACvB,SAAS,EAAC,gBAAgB,EAC1B,YAAY,EAAE,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAC3B,6BAAK,SAAS,EAAC,gBAAgB,EAC3B,KAAK,EAAE;oBACH,KAAK,EAAE,CAAC,GAAG,GAAG,KAAI,CAAC,YAAY,CAAC,GAAG,GAAG;iBACzC;gBACD,oBAAC,cAAI,IAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,KAAI,CAAC,KAAK,CAAC,YAAY,EAAE,eAAe,EAAE,KAAI,CAAC,KAAK,CAAC,eAAe,GAAI,CAClH,CACT,EAP8B,CAO9B,GAAI,CACZ,CAAC;IACN,CAAC;IAEO,wCAAoB,GAA5B,UAA6B,SAAiB,EAAE,WAAuB;QACnE,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,cAAc,CAAC,CAAC;YAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YACtE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QACxC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;IAC7C,CAAC;IAEO,kCAAc,GAAtB,UAAuB,SAAiB,EAAE,WAAuB;QAC7D,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;IAC3C,CAAC;IACL,gBAAC;AAAD,CAlDA,AAkDC,CAlDsC,KAAK,CAAC,SAAS,GAkDrD","file":"webparts/searchResults/components/TilesList/TilesList.js","sourcesContent":["import * as React from \"react\";\r\nimport ITilesListViewProps from \"./ITilesListViewProps\";\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport Tile from \"./Tile\";\r\nimport { IRectangle } from \"office-ui-fabric-react/lib/Utilities\";\r\nimport \"../SearchResultsWebPart.scss\";\r\n\r\nconst ROWS_PER_PAGE = 3;\r\nconst MAX_ROW_HEIGHT = 300;\r\n\r\nexport default class TilesList extends React.Component<ITilesListViewProps, null> {\r\n\r\n    private _positions: any;\r\n    private _columnCount: number;\r\n    private _columnWidth: number;\r\n    private _rowHeight: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._positions = {};\r\n        this._getItemCountForPage = this._getItemCountForPage.bind(this);\r\n        this._getPageHeight = this._getPageHeight.bind(this);\r\n    }\r\n\r\n    public render() {\r\n\r\n        const items = this.props.items;\r\n\r\n        return (\r\n            <List\r\n                items={items}\r\n                getItemCountForPage={this._getItemCountForPage}\r\n                getPageHeight={this._getPageHeight}\r\n                renderedWindowsAhead={4}\r\n                className=\"searchWp__list\"\r\n                onRenderCell={(item, index) => (\r\n                    <div className=\"searchWp__tile\"\r\n                        style={{\r\n                            width: (100 / this._columnCount) + '%',\r\n                        }}>\r\n                        <Tile key={index} item={item} showFileIcon={this.props.showFileIcon} showCreatedDate={this.props.showCreatedDate} />\r\n                    </div>\r\n                )} />\r\n        );\r\n    }\r\n\r\n    private _getItemCountForPage(itemIndex: number, surfaceRect: IRectangle) {\r\n        if (itemIndex === 0) {\r\n            this._columnCount = Math.ceil(surfaceRect.width / MAX_ROW_HEIGHT);\r\n            this._columnWidth = Math.floor(surfaceRect.width / this._columnCount);\r\n            this._rowHeight = this._columnWidth;\r\n        }\r\n\r\n        return this._columnCount * ROWS_PER_PAGE;\r\n    }\r\n\r\n    private _getPageHeight(itemIndex: number, surfaceRect: IRectangle) {\r\n        return this._rowHeight * ROWS_PER_PAGE;\r\n    }\r\n}"],"sourceRoot":"..\\..\\..\\..\\..\\src"}