{"version":3,"sources":["webparts/searchResults/components/SearchResultsContainer/SearchResultsContainer.tsx"],"names":[],"mappings":"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","file":"webparts/searchResults/components/SearchResultsContainer/SearchResultsContainer.js","sourcesContent":["import * as React from \"react\";\r\nimport ISearchContainerProps from \"./ISearchResultsContainerProps\";\r\nimport ISearchContainerState from \"./ISearchResultsContainerState\";\r\nimport { MessageBar, MessageBarType } from \"office-ui-fabric-react/lib/MessageBar\";\r\nimport { Spinner, SpinnerSize } from \"office-ui-fabric-react/lib/Spinner\";\r\nimport { Logger, LogLevel } from \"sp-pnp-js\";\r\nimport * as strings from \"SearchWebPartStrings\";\r\nimport { ISearchResults, IRefinementFilter } from \"../../../models/ISearchResult\";\r\nimport TilesList from \"../TilesList/TilesList\";\r\nimport \"../SearchResultsWebPart.scss\";\r\nimport FilterPanel from \"../FilterPanel/FilterPanel\";\r\nimport Paging from \"../Paging/Paging\";\r\nimport { Overlay } from \"office-ui-fabric-react/lib/Overlay\";\r\nimport { UrlQueryParameterCollection } from \"@microsoft/sp-core-library\";\r\n\r\nexport default class SearchResultsContainer extends React.Component<ISearchContainerProps, ISearchContainerState> {\r\n\r\n    public constructor(props) {\r\n        super(props);\r\n        // Set the initial state\r\n        this.state = {\r\n            results: {\r\n                RefinementResults: [],\r\n                RelevantResults: []\r\n            },\r\n            selectedFilters: [],\r\n            availableFilters: [],\r\n            currentPage: 1,\r\n            areResultsLoading: false,\r\n            isComponentLoading: true,\r\n            errorMessage: \"\",\r\n            hasError: false,\r\n            lastQuery: \"\"\r\n        };\r\n\r\n        this._onUpdateFilters = this._onUpdateFilters.bind(this);\r\n        this._onPageUpdate = this._onPageUpdate.bind(this);\r\n    }\r\n\r\n    public render(): React.ReactElement<ISearchContainerProps> {\r\n\r\n        const areResultsLoading = this.state.areResultsLoading;\r\n        const items = this.state.results;\r\n        const hasError = this.state.hasError;\r\n        const errorMessage = this.state.errorMessage;\r\n        const isComponentLoading = this.state.isComponentLoading;\r\n\r\n        let wpContent: JSX.Element = null;\r\n        let renderOverlay = null;\r\n\r\n        if (!isComponentLoading && areResultsLoading) {\r\n            renderOverlay = <div>\r\n                <Overlay isDarkThemed={false} className=\"overlay\">\r\n                </Overlay>\r\n            </div>;\r\n        }\r\n\r\n        if (isComponentLoading) {\r\n            wpContent = <Spinner size={SpinnerSize.large} label={strings.LoadingMessage} />;\r\n        } else {\r\n\r\n            if (hasError) {\r\n                wpContent = <MessageBar messageBarType={MessageBarType.error}>{errorMessage}</MessageBar>;\r\n            } else {\r\n\r\n                if (items.RelevantResults.length === 0) {\r\n                    wpContent =\r\n                        <div>\r\n                            <FilterPanel availableFilters={this.state.availableFilters} onUpdateFilters={this._onUpdateFilters} />\r\n                            <div className=\"searchWp__noresult\">{strings.NoResultMessage}</div>\r\n                        </div>;\r\n                } else {\r\n                    wpContent =\r\n\r\n                        <div>\r\n                            <FilterPanel availableFilters={this.state.availableFilters} onUpdateFilters={this._onUpdateFilters} />\r\n                            {renderOverlay}\r\n                            <TilesList items={items.RelevantResults} showFileIcon={this.props.showFileIcon} showCreatedDate={this.props.showCreatedDate} />\r\n                            {this.props.showPaging ?\r\n                                <Paging\r\n                                    totalItems={items.TotalRows}\r\n                                    itemsCountPerPage={this.props.maxResultsCount}\r\n                                    onPageUpdate={this._onPageUpdate}\r\n                                    currentPage={this.state.currentPage} />\r\n                                : null\r\n                            }\r\n                        </div>;\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"searchWp\">\r\n                {wpContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        \r\n        try {\r\n\r\n            this.setState({\r\n                areResultsLoading: true,\r\n            });\r\n\r\n            this.props.searchDataProvider.selectedProperties = this.props.selectedProperties;\r\n\r\n            const searchResults = await this.props.searchDataProvider.search(this.props.queryKeywords, this.props.refiners, this.state.selectedFilters, this.state.currentPage);\r\n\r\n            // Initial filters are just set once for the filter control during the component initialization\r\n            // By this way, we are be able to select multiple values whithin a specific filter (OR condition). Otherwise, if we pass every time the new filters retrieved from new results,\r\n            // previous values will overwritten preventing to select multiple values (default SharePoint behavior)\r\n            this.setState({\r\n                results: searchResults,\r\n                availableFilters: searchResults.RefinementResults,\r\n                areResultsLoading: false,\r\n                isComponentLoading: false,\r\n                lastQuery: this.props.queryKeywords + this.props.searchDataProvider.queryTemplate + this.props.selectedProperties.join(',')\r\n            });\r\n\r\n        } catch (error) {\r\n\r\n            Logger.write(\"[SearchContainer._componentDidMount()]: Error: \" + error, LogLevel.Error);\r\n\r\n            this.setState({\r\n                areResultsLoading: false,\r\n                isComponentLoading: false,\r\n                results: { RefinementResults: [], RelevantResults: [] },\r\n                hasError: true,\r\n                errorMessage: error.message\r\n            });\r\n        }\r\n    }\r\n\r\n    public async componentWillReceiveProps(nextProps: ISearchContainerProps) {\r\n\r\n        let query = nextProps.queryKeywords + nextProps.searchDataProvider.queryTemplate + nextProps.selectedProperties.join(',');\r\n        // New props are passed to the component when the search query has been changed\r\n        if (this.props.refiners.toString() !== nextProps.refiners.toString()\r\n            || this.props.maxResultsCount !== nextProps.maxResultsCount\r\n            || this.state.lastQuery !== query\r\n            || this.props.showFileIcon !== nextProps.showFileIcon\r\n            || this.props.resultSourceId !== nextProps.resultSourceId\r\n            || this.props.showCreatedDate !== nextProps.showCreatedDate\r\n            || this.props.queryKeywords !== nextProps.queryKeywords\r\n            || this.props.enableQueryRules !== nextProps.enableQueryRules) {\r\n\r\n            try {\r\n                // Clear selected filters on a new query or new refiners\r\n                this.setState({\r\n                    selectedFilters: [],\r\n                    areResultsLoading: true,\r\n                });\r\n\r\n                this.props.searchDataProvider.selectedProperties = nextProps.selectedProperties;\r\n                // We reset the page number and refinement filters\r\n                const searchResults = await this.props.searchDataProvider.search(nextProps.queryKeywords, nextProps.refiners, [], 1);\r\n\r\n                this.setState({\r\n                    results: searchResults,\r\n                    availableFilters: searchResults.RefinementResults,\r\n                    areResultsLoading: false,\r\n                    lastQuery: query\r\n                });\r\n\r\n            } catch (error) {\r\n\r\n                Logger.write(\"[SearchContainer._componentWillReceiveProps()]: Error: \" + error, LogLevel.Error);\r\n\r\n                this.setState({\r\n                    areResultsLoading: false,\r\n                    isComponentLoading: false,\r\n                    results: { RefinementResults: [], RelevantResults: [] },\r\n                    hasError: true,\r\n                    errorMessage: error.message\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback function to apply new filters coming from the filter panel child component\r\n     * @param newFilters The new filters to apply\r\n     */\r\n    private async _onUpdateFilters(newFilters: IRefinementFilter[]) {\r\n\r\n        // Get back to the first page when new filters have been selected\r\n        this.setState({\r\n            selectedFilters: newFilters,\r\n            currentPage: 1,\r\n            areResultsLoading: true,\r\n        });\r\n\r\n        const searchResults = await this.props.searchDataProvider.search(this.props.queryKeywords, this.props.refiners, newFilters, 1);\r\n\r\n        this.setState({\r\n            results: searchResults,\r\n            areResultsLoading: false,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback function update search results according the page number\r\n     * @param pageNumber The page mumber to get\r\n     */\r\n    private async _onPageUpdate(pageNumber: number) {\r\n\r\n        this.setState({\r\n            currentPage: pageNumber,\r\n            areResultsLoading: true,\r\n        });\r\n\r\n        const searchResults = await this.props.searchDataProvider.search(this.props.queryKeywords, this.props.refiners, this.state.selectedFilters, pageNumber);\r\n\r\n        this.setState({\r\n            results: searchResults,\r\n            areResultsLoading: false,\r\n        });\r\n    }\r\n}"],"sourceRoot":"..\\..\\..\\..\\..\\src"}